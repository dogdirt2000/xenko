<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildThisFileDirectory)\..\targets\Xenko.PreSettings.targets" />
  
  <Import Condition="Exists('$(MSBuildProjectDirectory)\Xenko.Native.Libs.targets')" Project="$(MSBuildProjectDirectory)\Xenko.Native.Libs.targets" />
  
  <ItemGroup>
    <XenkoNativeCFiles Include="**\*.c;**\*.cpp" />
    <XenkoNativeHFiles Include="**\*.h;**\*.hpp" />
  </ItemGroup>

  <PropertyGroup>
    <SiliconStudioXenkoSdkBinDir>$(XenkoDependenciesDir)\..\Bin\$(SiliconStudioBuildDirectory)</SiliconStudioXenkoSdkBinDir>
    <XenkoNativeAndroidGCC>-nostdlib -ldl -lstdc++ -lc -lm</XenkoNativeAndroidGCC>
    <!--Use "-v" to debug the tooling -->
    <XenkoNativeToolingDebug></XenkoNativeToolingDebug> 
    <XenkoNativeClang>$(XenkoNativeToolingDebug) -Wno-ignored-attributes -Wno-delete-non-virtual-dtor -Wno-macro-redefined -I&quot;$(XenkoDependenciesDir)\NativePath&quot; -I&quot;$(XenkoDependenciesDir)\NativePath\standard&quot;</XenkoNativeClang>
    <XenkoNativeClang Condition="'$(SiliconStudioPlatform)' == 'Linux'">$(XenkoNativeClang) -DPLATFORM_LINUX</XenkoNativeClang>
    <XenkoNativeClangCPP>-std=c++11 -fno-rtti -fno-exceptions</XenkoNativeClangCPP>
  </PropertyGroup>

  <Choose>
    <When Condition="('$(SiliconStudioPlatform)' == 'Windows10') OR ('$(SiliconStudioPlatform)' == 'WindowsStore') OR ('$(SiliconStudioPlatform)' == 'WindowsPhone')">
      <PropertyGroup>
        <XenkoNativeClang Condition="'$(Configuration)' == 'Debug'">$(XenkoNativeClang) -O2</XenkoNativeClang>
        <XenkoNativeClang Condition="'$(Configuration)' == 'Release'">$(XenkoNativeClang) -O2</XenkoNativeClang>
      </PropertyGroup>
    </When>
    <Otherwise>
      <PropertyGroup>
        <XenkoNativeClang Condition="'$(Configuration)' == 'Debug'">$(XenkoNativeClang) -O0 -g</XenkoNativeClang>
        <XenkoNativeClang Condition="'$(Configuration)' == 'Release'">$(XenkoNativeClang) -O3</XenkoNativeClang>
      </PropertyGroup>
    </Otherwise>
  </Choose>

  <Target Name="CompileNativeClang_Windows" Inputs="@(XenkoNativeCFiles);@(XenkoNativeHFiles)" Outputs="$(SiliconStudioXenkoSdkBinDir)\x86\$(XenkoNativeOutputName).dll;$(SiliconStudioXenkoSdkBinDir)\x64\$(XenkoNativeOutputName).dll"  Condition="'$(SiliconStudioPlatform)' == 'Windows'" BeforeTargets="Build">    
    <Exec Condition="'%(XenkoNativeCFiles.Extension)' != '.cpp'" Command="&quot;$(XenkoDependenciesDir)\LLVM\clang.exe&quot; -fno-ms-extensions -nobuiltininc -nostdinc++ $(XenkoNativeClang) -o &quot;$(ProjectDir)\obj\%(XenkoNativeCFiles.Filename).obj&quot; -c &quot;%(XenkoNativeCFiles.FullPath)&quot; -fms-extensions -DWINDOWS_DESKTOP -target i686-pc-windows-msvc" />
    <Exec Condition="'%(XenkoNativeCFiles.Extension)' == '.cpp'" Command="&quot;$(XenkoDependenciesDir)\LLVM\clang.exe&quot; -fno-ms-extensions -nobuiltininc -nostdinc++ $(XenkoNativeClangCPP) $(XenkoNativeClang) -o &quot;$(ProjectDir)obj\%(XenkoNativeCFiles.Filename).obj&quot; -c &quot;%(XenkoNativeCFiles.FullPath)&quot;  -fms-extensions -DWINDOWS_DESKTOP -target i686-pc-windows-msvc" />
    <MSBuild Projects="$(MSBuildThisFileDirectory)\WindowsProjects\WindowsDesktop\WindowsDesktop.sln" Targets="Build" Properties="XenkoNativeOutputName=$(XenkoNativeOutputName);XenkoNativeOutputDir=$(SiliconStudioXenkoSdkBinDir);XenkoDependenciesDir=$(XenkoDependenciesDir);XenkoNativePathLibs=libNativePath.lib $(XenkoNativePathLibs);XenkoNativeProjectFolder=$(ProjectDir);Configuration=$(Configuration);Platform=x86" StopOnFirstFailure="true" />
        
    <Exec Condition="'%(XenkoNativeCFiles.Extension)' != '.cpp'" Command="&quot;$(XenkoDependenciesDir)\LLVM\clang.exe&quot; -fno-ms-extensions -nobuiltininc -nostdinc++ $(XenkoNativeClang) -o &quot;$(ProjectDir)\obj\%(XenkoNativeCFiles.Filename).obj&quot; -c &quot;%(XenkoNativeCFiles.FullPath)&quot; -fms-extensions -DWINDOWS_DESKTOP -target x86_64-pc-windows-msvc" />
    <Exec Condition="'%(XenkoNativeCFiles.Extension)' == '.cpp'" Command="&quot;$(XenkoDependenciesDir)\LLVM\clang.exe&quot; -fno-ms-extensions -nobuiltininc -nostdinc++ $(XenkoNativeClangCPP) $(XenkoNativeClang) -o &quot;$(ProjectDir)obj\%(XenkoNativeCFiles.Filename).obj&quot; -c &quot;%(XenkoNativeCFiles.FullPath)&quot;  -fms-extensions -DWINDOWS_DESKTOP -target x86_64-pc-windows-msvc" />
    <MSBuild Projects="$(MSBuildThisFileDirectory)\WindowsProjects\WindowsDesktop\WindowsDesktop.sln" Targets="Build" Properties="XenkoNativeOutputName=$(XenkoNativeOutputName);XenkoNativeOutputDir=$(SiliconStudioXenkoSdkBinDir);XenkoDependenciesDir=$(XenkoDependenciesDir);XenkoNativePathLibs=libNativePath.lib $(XenkoNativePathLibs);XenkoNativeProjectFolder=$(ProjectDir);Configuration=$(Configuration);Platform=x64" StopOnFirstFailure="true" />
  </Target>

  <Target Name="CompileNativeClang_Windows10" Inputs="@(XenkoNativeCFiles);@(XenkoNativeHFiles)" Outputs="$(SiliconStudioXenkoSdkBinDir)\x86\$(XenkoNativeOutputName).dll;$(SiliconStudioXenkoSdkBinDir)\x64\$(XenkoNativeOutputName).dll;$(SiliconStudioXenkoSdkBinDir)\ARM\$(XenkoNativeOutputName).dll"  Condition="'$(SiliconStudioPlatform)' == 'Windows10'" BeforeTargets="Build">
    <Exec Command="&quot;$(XenkoDependenciesDir)\LLVM\clang-cl.exe&quot; $(XenkoNativeClang) -o &quot;$(ProjectDir)\obj\%(XenkoNativeCFiles.Filename).obj&quot; -c &quot;%(XenkoNativeCFiles.FullPath)&quot; -WX -EHsc -MD -DWINDOWS_UWP -m32" />
    <MSBuild Projects="$(MSBuildThisFileDirectory)\WindowsProjects\Windows10\Windows10.sln" Targets="Build" Properties="XenkoNativeOutputName=$(XenkoNativeOutputName);XenkoNativeOutputDir=$(SiliconStudioXenkoSdkBinDir);XenkoDependenciesDir=$(XenkoDependenciesDir);XenkoNativePathLibs=libNativePath.lib $(XenkoNativePathLibs);XenkoNativeProjectFolder=$(ProjectDir);Configuration=$(Configuration);Platform=x86" StopOnFirstFailure="true" />

    <Exec Command="&quot;$(XenkoDependenciesDir)\LLVM\clang-cl.exe&quot; $(XenkoNativeClang) -o &quot;$(ProjectDir)\obj\%(XenkoNativeCFiles.Filename).obj&quot; -c &quot;%(XenkoNativeCFiles.FullPath)&quot; -WX -EHsc -MD -DWINDOWS_UWP -m64" />
    <MSBuild Projects="$(MSBuildThisFileDirectory)\WindowsProjects\Windows10\Windows10.sln" Targets="Build" Properties="XenkoNativeOutputName=$(XenkoNativeOutputName);XenkoNativeOutputDir=$(SiliconStudioXenkoSdkBinDir);XenkoDependenciesDir=$(XenkoDependenciesDir);XenkoNativePathLibs=libNativePath.lib $(XenkoNativePathLibs);XenkoNativeProjectFolder=$(ProjectDir);Configuration=$(Configuration);Platform=x64" StopOnFirstFailure="true" />

    <Exec Command="&quot;$(XenkoDependenciesDir)\LLVM\clang-cl.exe&quot; $(XenkoNativeClang) -o &quot;$(ProjectDir)\obj\%(XenkoNativeCFiles.Filename).obj&quot; -c &quot;%(XenkoNativeCFiles.FullPath)&quot; -WX -EHsc -MD -DWINDOWS_UWP -m32 --target=thumbv7-windows-msvc" />
    <MSBuild Projects="$(MSBuildThisFileDirectory)\WindowsProjects\Windows10\Windows10.sln" Targets="Build" Properties="XenkoNativeOutputName=$(XenkoNativeOutputName);XenkoNativeOutputDir=$(SiliconStudioXenkoSdkBinDir);XenkoDependenciesDir=$(XenkoDependenciesDir);XenkoNativePathLibs=libNativePath.lib $(XenkoNativePathLibs);XenkoNativeProjectFolder=$(ProjectDir);Configuration=$(Configuration);Platform=ARM" StopOnFirstFailure="true" />
  </Target>

  <Target Name="CompileNativeClang_WindowsStore" Inputs="@(XenkoNativeCFiles);@(XenkoNativeHFiles)" Outputs="$(SiliconStudioXenkoSdkBinDir)\x86\$(XenkoNativeOutputName).dll;$(SiliconStudioXenkoSdkBinDir)\x64\$(XenkoNativeOutputName).dll;$(SiliconStudioXenkoSdkBinDir)\ARM\$(XenkoNativeOutputName).dll"  Condition="'$(SiliconStudioPlatform)' == 'WindowsStore'" BeforeTargets="Build">
    <Exec Command="&quot;$(XenkoDependenciesDir)\LLVM\clang-cl.exe&quot; $(XenkoNativeClang) -o &quot;$(ProjectDir)\obj\%(XenkoNativeCFiles.Filename).obj&quot; -c &quot;%(XenkoNativeCFiles.FullPath)&quot; -WX -EHsc -MD -DWINDOWS_STORE -m32"/>
    <MSBuild Projects="$(MSBuildThisFileDirectory)\WindowsProjects\WindowsStore\WindowsStore.sln" Targets="Build" Properties="XenkoNativeOutputName=$(XenkoNativeOutputName);XenkoNativeOutputDir=$(SiliconStudioXenkoSdkBinDir);XenkoDependenciesDir=$(XenkoDependenciesDir);XenkoNativePathLibs=libNativePath.lib $(XenkoNativePathLibs);XenkoNativeProjectFolder=$(ProjectDir);Configuration=$(Configuration);Platform=x86" StopOnFirstFailure="true" />

    <Exec Command="&quot;$(XenkoDependenciesDir)\LLVM\clang-cl.exe&quot; $(XenkoNativeClang) -o &quot;$(ProjectDir)\obj\%(XenkoNativeCFiles.Filename).obj&quot; -c &quot;%(XenkoNativeCFiles.FullPath)&quot; -WX -EHsc -MD -DWINDOWS_STORE -m64" />
    <MSBuild Projects="$(MSBuildThisFileDirectory)\WindowsProjects\WindowsStore\WindowsStore.sln" Targets="Build" Properties="XenkoNativeOutputName=$(XenkoNativeOutputName);XenkoNativeOutputDir=$(SiliconStudioXenkoSdkBinDir);XenkoDependenciesDir=$(XenkoDependenciesDir);XenkoNativePathLibs=libNativePath.lib $(XenkoNativePathLibs);XenkoNativeProjectFolder=$(ProjectDir);Configuration=$(Configuration);Platform=x64" StopOnFirstFailure="true" />

    <Exec Command="&quot;$(XenkoDependenciesDir)\LLVM\clang-cl.exe&quot; $(XenkoNativeClang) -o &quot;$(ProjectDir)\obj\%(XenkoNativeCFiles.Filename).obj&quot; -c &quot;%(XenkoNativeCFiles.FullPath)&quot; -WX -EHsc -MD -DWINDOWS_STORE -m32 --target=thumbv7-windows-msvc" />
    <MSBuild Projects="$(MSBuildThisFileDirectory)\WindowsProjects\WindowsStore\WindowsStore.sln" Targets="Build" Properties="XenkoNativeOutputName=$(XenkoNativeOutputName);XenkoNativeOutputDir=$(SiliconStudioXenkoSdkBinDir);XenkoDependenciesDir=$(XenkoDependenciesDir);XenkoNativePathLibs=libNativePath.lib $(XenkoNativePathLibs);XenkoNativeProjectFolder=$(ProjectDir);Configuration=$(Configuration);Platform=ARM" StopOnFirstFailure="true" />
  </Target>

  <Target Name="CompileNativeClang_WindowsPhone" Inputs="@(XenkoNativeCFiles);@(XenkoNativeHFiles)" Outputs="$(SiliconStudioXenkoSdkBinDir)\x86\$(XenkoNativeOutputName).dll;$(SiliconStudioXenkoSdkBinDir)\ARM\$(XenkoNativeOutputName).dll"  Condition="'$(SiliconStudioPlatform)' == 'WindowsPhone'" BeforeTargets="Build">
    <Exec Command="&quot;$(XenkoDependenciesDir)\LLVM\clang-cl.exe&quot; $(XenkoNativeClang) -o &quot;$(ProjectDir)\obj\%(XenkoNativeCFiles.Filename).obj&quot; -c &quot;%(XenkoNativeCFiles.FullPath)&quot; -WX -EHsc -MD -DWINDOWS_PHONE -m32" />
    <MSBuild Projects="$(MSBuildThisFileDirectory)\WindowsProjects\WindowsPhone\WindowsPhone.sln" Targets="Build" Properties="XenkoNativeOutputName=$(XenkoNativeOutputName);XenkoNativeOutputDir=$(SiliconStudioXenkoSdkBinDir);XenkoDependenciesDir=$(XenkoDependenciesDir);XenkoNativePathLibs=libNativePath.lib $(XenkoNativePathLibs);XenkoNativeProjectFolder=$(ProjectDir);Configuration=$(Configuration);Platform=x86" StopOnFirstFailure="true" />

    <Exec Command="&quot;$(XenkoDependenciesDir)\LLVM\clang-cl.exe&quot; $(XenkoNativeClang) -o &quot;$(ProjectDir)\obj\%(XenkoNativeCFiles.Filename).obj&quot; -c &quot;%(XenkoNativeCFiles.FullPath)&quot; -WX -EHsc -MD -DWINDOWS_PHONE -m32 --target=thumbv7-windows-msvc" />
    <MSBuild Projects="$(MSBuildThisFileDirectory)\WindowsProjects\WindowsPhone\WindowsPhone.sln" Targets="Build" Properties="XenkoNativeOutputName=$(XenkoNativeOutputName);XenkoNativeOutputDir=$(SiliconStudioXenkoSdkBinDir);XenkoDependenciesDir=$(XenkoDependenciesDir);XenkoNativePathLibs=libNativePath.lib $(XenkoNativePathLibs);XenkoNativeProjectFolder=$(ProjectDir);Configuration=$(Configuration);Platform=ARM" StopOnFirstFailure="true" />
  </Target>
  
  <!-- The following condition $(SiliconStudioPackageBuild) should be removed but for now it prevents teamcity package build -->
  <Target Name="CompileNativeClang_Windows_Clean" Condition="'$(SiliconStudioPlatform)' == 'Windows' and '$(SiliconStudioPackageBuild)' != 'true'" BeforeTargets="Clean">
    <Delete Files="$(SiliconStudioXenkoSdkBinDir)\x64\$(XenkoNativeOutputName).*" />
    <Delete Files="$(SiliconStudioXenkoSdkBinDir)\x86\$(XenkoNativeOutputName).*" />
  </Target>

  <Target Name="CompileNativeClang_Windows10_Clean" Condition="'$(SiliconStudioPlatform)' == 'Windows10'" BeforeTargets="Clean">
    <Delete Files="$(SiliconStudioXenkoSdkBinDir)\x64\$(XenkoNativeOutputName).*" />
    <Delete Files="$(SiliconStudioXenkoSdkBinDir)\ARM\$(XenkoNativeOutputName).*" />
    <Delete Files="$(SiliconStudioXenkoSdkBinDir)\x86\$(XenkoNativeOutputName).*" />
  </Target>

  <Target Name="CompileNativeClang_WindowsStore_Clean" Condition="'$(SiliconStudioPlatform)' == 'WindowsStore'" BeforeTargets="Clean">
    <Delete Files="$(SiliconStudioXenkoSdkBinDir)\x64\$(XenkoNativeOutputName).*" />
    <Delete Files="$(SiliconStudioXenkoSdkBinDir)\ARM\$(XenkoNativeOutputName).*" />
    <Delete Files="$(SiliconStudioXenkoSdkBinDir)\x86\$(XenkoNativeOutputName).*" />
  </Target>

  <Target Name="CompileNativeClang_WindowsPhone_Clean" Condition="'$(SiliconStudioPlatform)' == 'WindowsPhone'" BeforeTargets="Clean">
    <Delete Files="$(SiliconStudioXenkoSdkBinDir)\x64\$(XenkoNativeOutputName).*" />
    <Delete Files="$(SiliconStudioXenkoSdkBinDir)\x86\$(XenkoNativeOutputName).*" />
  </Target>
  
  <Target Name="CompileNativeClang_iOS" Inputs="@(XenkoNativeCFiles);@(XenkoNativeHFiles)" Outputs="$(SiliconStudioXenkoSdkBinDir)\$(XenkoNativeOutputName).a" Condition="'$(SiliconStudioPlatform)' == 'iOS'" BeforeTargets="Build">
    <Exec Condition="'%(XenkoNativeCFiles.Extension)' != '.cpp'" Command="&quot;$(XenkoDependenciesDir)\LLVM\clang.exe&quot; $(XenkoNativeClang) -o &quot;$(ProjectDir)\obj\%(XenkoNativeCFiles.Filename).o&quot; -c &quot;%(XenkoNativeCFiles.FullPath)&quot; -DIOS -mios-version-min=6.0 -target armv7-apple-ios" />
    <Exec Condition="'%(XenkoNativeCFiles.Extension)' == '.cpp'" Command="&quot;$(XenkoDependenciesDir)\LLVM\clang.exe&quot; $(XenkoNativeClangCPP) $(XenkoNativeClang) -o &quot;$(ProjectDir)\obj\%(XenkoNativeCFiles.Filename).o&quot; -c &quot;%(XenkoNativeCFiles.FullPath)&quot; -DIOS -mios-version-min=6.0 -target armv7-apple-ios" />
    <Exec Command="&quot;$(XenkoDependenciesDir)\LLVM\llvm-ar.exe&quot; rcs -format=bsd &quot;$(ProjectDir)\obj\$(XenkoNativeOutputName)_armv7.a&quot; @(XenkoNativeCFiles->'&quot;$(ProjectDir)\obj\%(Filename).o&quot;', ' ')" />
    
    <Exec Condition="'%(XenkoNativeCFiles.Extension)' != '.cpp'" Command="&quot;$(XenkoDependenciesDir)\LLVM\clang.exe&quot; $(XenkoNativeClang) -o &quot;$(ProjectDir)\obj\%(XenkoNativeCFiles.Filename).o&quot; -c &quot;%(XenkoNativeCFiles.FullPath)&quot; -DIOS -mios-version-min=6.0 -target armv7s-apple-ios" />
    <Exec Condition="'%(XenkoNativeCFiles.Extension)' == '.cpp'" Command="&quot;$(XenkoDependenciesDir)\LLVM\clang.exe&quot; $(XenkoNativeClangCPP) $(XenkoNativeClang) -o &quot;$(ProjectDir)\obj\%(XenkoNativeCFiles.Filename).o&quot; -c &quot;%(XenkoNativeCFiles.FullPath)&quot; -DIOS -mios-version-min=6.0 -target armv7s-apple-ios" />
    <Exec Command="&quot;$(XenkoDependenciesDir)\LLVM\llvm-ar.exe&quot; rcs -format=bsd &quot;$(ProjectDir)\obj\$(XenkoNativeOutputName)_armv7s.a&quot; @(XenkoNativeCFiles->'&quot;$(ProjectDir)\obj\%(Filename).o&quot;', ' ')" />
    
    <Exec Condition="'%(XenkoNativeCFiles.Extension)' != '.cpp'" Command="&quot;$(XenkoDependenciesDir)\LLVM\clang.exe&quot; $(XenkoNativeClang) -o &quot;$(ProjectDir)\obj\%(XenkoNativeCFiles.Filename).o&quot; -c &quot;%(XenkoNativeCFiles.FullPath)&quot; -DIOS -mios-version-min=6.0 -target arm64-apple-ios" />
    <Exec Condition="'%(XenkoNativeCFiles.Extension)' == '.cpp'" Command="&quot;$(XenkoDependenciesDir)\LLVM\clang.exe&quot; $(XenkoNativeClangCPP) $(XenkoNativeClang) -o &quot;$(ProjectDir)\obj\%(XenkoNativeCFiles.Filename).o&quot; -c &quot;%(XenkoNativeCFiles.FullPath)&quot; -DIOS -mios-version-min=6.0 -target arm64-apple-ios" />
    <Exec Command="&quot;$(XenkoDependenciesDir)\LLVM\llvm-ar.exe&quot; rcs -format=bsd &quot;$(ProjectDir)\obj\$(XenkoNativeOutputName)_arm64.a&quot; @(XenkoNativeCFiles->'&quot;$(ProjectDir)\obj\%(Filename).o&quot;', ' ')" />
    
    <Exec Condition="'%(XenkoNativeCFiles.Extension)' != '.cpp'" Command="&quot;$(XenkoDependenciesDir)\LLVM\clang.exe&quot; $(XenkoNativeClang) -o &quot;$(ProjectDir)\obj\%(XenkoNativeCFiles.Filename).o&quot; -c &quot;%(XenkoNativeCFiles.FullPath)&quot; -DIOS -mios-version-min=6.0 -target i386-apple-ios" />
    <Exec Condition="'%(XenkoNativeCFiles.Extension)' == '.cpp'" Command="&quot;$(XenkoDependenciesDir)\LLVM\clang.exe&quot; $(XenkoNativeClangCPP) $(XenkoNativeClang) -o &quot;$(ProjectDir)\obj\%(XenkoNativeCFiles.Filename).o&quot; -c &quot;%(XenkoNativeCFiles.FullPath)&quot; -DIOS -mios-version-min=6.0 -target i386-apple-ios" />
    <Exec Command="&quot;$(XenkoDependenciesDir)\LLVM\llvm-ar.exe&quot; rcs -format=bsd &quot;$(ProjectDir)\obj\$(XenkoNativeOutputName)_i386.a&quot; @(XenkoNativeCFiles->'&quot;$(ProjectDir)\obj\%(Filename).o&quot;', ' ')" />
    
    <Exec Condition="'%(XenkoNativeCFiles.Extension)' != '.cpp'" Command="&quot;$(XenkoDependenciesDir)\LLVM\clang.exe&quot; $(XenkoNativeClang) -o &quot;$(ProjectDir)\obj\%(XenkoNativeCFiles.Filename).o&quot; -c &quot;%(XenkoNativeCFiles.FullPath)&quot; -DIOS -mios-version-min=6.0 -target x86_64-apple-ios" />
    <Exec Condition="'%(XenkoNativeCFiles.Extension)' == '.cpp'" Command="&quot;$(XenkoDependenciesDir)\LLVM\clang.exe&quot; $(XenkoNativeClangCPP) $(XenkoNativeClang) -o &quot;$(ProjectDir)\obj\%(XenkoNativeCFiles.Filename).o&quot; -c &quot;%(XenkoNativeCFiles.FullPath)&quot; -DIOS -mios-version-min=6.0 -target x86_64-apple-ios" />
    <Exec Command="&quot;$(XenkoDependenciesDir)\LLVM\llvm-ar.exe&quot; rcs -format=bsd &quot;$(ProjectDir)\obj\$(XenkoNativeOutputName)_x86_64.a&quot; @(XenkoNativeCFiles->'&quot;$(ProjectDir)\obj\%(Filename).o&quot;', ' ')" />
    
	  <Exec Command="&quot;$(XenkoDependenciesDir)\LLVM\lipo.exe&quot; &quot;$(ProjectDir)\obj\$(XenkoNativeOutputName)_armv7.a&quot; &quot;$(ProjectDir)\obj\$(XenkoNativeOutputName)_armv7s.a&quot; &quot;$(ProjectDir)\obj\$(XenkoNativeOutputName)_arm64.a&quot; &quot;$(ProjectDir)\obj\$(XenkoNativeOutputName)_i386.a&quot; &quot;$(ProjectDir)\obj\$(XenkoNativeOutputName)_x86_64.a&quot; -create -output &quot;$(SiliconStudioXenkoSdkBinDir)\$(XenkoNativeOutputName).a&quot;" />

    <Copy SourceFiles="$(XenkoDependenciesDir)\NativePath\iOS\libNativePath.a" DestinationFolder="$(SiliconStudioXenkoSdkBinDir)" />
    
    <Copy SourceFiles="@(XenkoNativePathLibs2)" DestinationFolder="$(SiliconStudioXenkoSdkBinDir)" />
  </Target>

  <Target Name="CompileNativeClang_iOS_Clean" Condition="'$(SiliconStudioPlatform)' == 'iOS'" BeforeTargets="Clean">
    <Delete Files="$(SiliconStudioXenkoSdkBinDir)\$(XenkoNativeOutputName).a" />
    <Delete Files="$(SiliconStudioXenkoSdkBinDir)\libNativePath.a" />
    <Delete Files="@(XenkoNativePathLibs2->'$(SiliconStudioXenkoSdkBinDir)\%(Filename).a', ' ')" />
  </Target>

  <PropertyGroup Condition="Exists('$(ANDROID_NDK_PATH)\RELEASE.TXT')">
    <XenkoNativeAndroidIs64Bit Condition="'$([System.Text.RegularExpressions.Regex]::Match($([System.IO.File]::ReadAllText(`$(ANDROID_NDK_PATH)\RELEASE.TXT`)), `r\d\d\w\s\(64-bit\)`).Success)' == 'true'">-x86_64</XenkoNativeAndroidIs64Bit>
    <XenkoNativeAndroidIs64Bit Condition="'$([System.Text.RegularExpressions.Regex]::Match($([System.IO.File]::ReadAllText(`$(ANDROID_NDK_PATH)\RELEASE.TXT`)), `r\d\d\w\s\(64-bit\)`).Success)' == 'false'"></XenkoNativeAndroidIs64Bit>
  </PropertyGroup>
  
  <Target Name="CompileNativeClang_Android" Inputs="@(XenkoNativeCFiles);@(XenkoNativeHFiles)" Outputs="$(SiliconStudioXenkoSdkBinDir)\arm64-v8a\$(XenkoNativeOutputName).so;$(SiliconStudioXenkoSdkBinDir)\armeabi\$(XenkoNativeOutputName).so;$(SiliconStudioXenkoSdkBinDir)\armeabi-v7a\$(XenkoNativeOutputName).so;$(SiliconStudioXenkoSdkBinDir)\x86\$(XenkoNativeOutputName).so;$(SiliconStudioXenkoSdkBinDir)\x86_64\$(XenkoNativeOutputName).so" Condition="'$(SiliconStudioPlatform)' == 'Android'" BeforeTargets="Build">
    <Error Text="The ANDROID_NDK_PATH environment variable is not set!" Condition="'$(ANDROID_NDK_PATH)' == ''" />
    <Error Text="The installed NDK version is outdated, please install a r10+! ($(ANDROID_NDK_PATH))" Condition="'$([System.Text.RegularExpressions.Regex]::Match($([System.IO.File]::ReadAllText(`$(ANDROID_NDK_PATH)\RELEASE.TXT`)), `r\d\d`).Success)' == 'false'" />

    <MakeDir Directories="$(SiliconStudioXenkoSdkBinDir)\armeabi-v7a"/>   
    <Exec Condition="'%(XenkoNativeCFiles.Extension)' != '.cpp'" Command="&quot;$(XenkoDependenciesDir)\LLVM\clang.exe&quot; $(XenkoNativeClang) -o &quot;$(ProjectDir)\obj\%(XenkoNativeCFiles.Filename).o&quot; -c &quot;%(XenkoNativeCFiles.FullPath)&quot; -DANDROID -target armv7-none-android" />
    <Exec Condition="'%(XenkoNativeCFiles.Extension)' == '.cpp'" Command="&quot;$(XenkoDependenciesDir)\LLVM\clang.exe&quot; $(XenkoNativeClangCPP) $(XenkoNativeClang) -o &quot;$(ProjectDir)\obj\%(XenkoNativeCFiles.Filename).o&quot; -c &quot;%(XenkoNativeCFiles.FullPath)&quot; -DANDROID -target armv7-none-android" />
    <Exec Command="&quot;$(ANDROID_NDK_PATH)\toolchains\arm-linux-androideabi-4.9\prebuilt\windows$(XenkoNativeAndroidIs64Bit)\bin\arm-linux-androideabi-gcc.exe&quot; $(XenkoNativeToolingDebug) -shared -o &quot;$(SiliconStudioXenkoSdkBinDir)\armeabi-v7a\$(XenkoNativeOutputName).so&quot; @(XenkoNativeCFiles->'&quot;$(ProjectDir)\obj\%(Filename).o&quot;', ' ') --sysroot=&quot;$(ANDROID_NDK_PATH)\platforms\android-9\arch-arm&quot; @(XenkoNativePathLibs2->'&quot;$(XenkoDependenciesDir)\NativePath\Android\armeabi-v7a\%(Filename).a&quot;', ' ') &quot;$(XenkoDependenciesDir)\NativePath\Android\armeabi-v7a\libNativePath.a&quot; $(XenkoNativeAndroidGCC)" />

    <MakeDir Directories="$(SiliconStudioXenkoSdkBinDir)\armeabi"/>  
    <Exec Condition="'%(XenkoNativeCFiles.Extension)' != '.cpp'" Command="&quot;$(XenkoDependenciesDir)\LLVM\clang.exe&quot; $(XenkoNativeClang) -o &quot;$(ProjectDir)\obj\%(XenkoNativeCFiles.Filename).o&quot; -c &quot;%(XenkoNativeCFiles.FullPath)&quot; -DANDROID -target arm-none-android" />
    <Exec Condition="'%(XenkoNativeCFiles.Extension)' == '.cpp'" Command="&quot;$(XenkoDependenciesDir)\LLVM\clang.exe&quot; $(XenkoNativeClangCPP) $(XenkoNativeClang) -o &quot;$(ProjectDir)\obj\%(XenkoNativeCFiles.Filename).o&quot; -c &quot;%(XenkoNativeCFiles.FullPath)&quot; -DANDROID -target arm-none-android" />
    <Exec Command="&quot;$(ANDROID_NDK_PATH)\toolchains\arm-linux-androideabi-4.9\prebuilt\windows$(XenkoNativeAndroidIs64Bit)\bin\arm-linux-androideabi-gcc.exe&quot; $(XenkoNativeToolingDebug) -shared -o &quot;$(SiliconStudioXenkoSdkBinDir)\armeabi\$(XenkoNativeOutputName).so&quot; @(XenkoNativeCFiles->'&quot;$(ProjectDir)\obj\%(Filename).o&quot;', ' ') --sysroot=&quot;$(ANDROID_NDK_PATH)\platforms\android-9\arch-arm&quot; @(XenkoNativePathLibs2->'&quot;$(XenkoDependenciesDir)\NativePath\Android\armeabi\%(Filename).a&quot;', ' ') &quot;$(XenkoDependenciesDir)\NativePath\Android\armeabi\libNativePath.a&quot; $(XenkoNativeAndroidGCC)" />

    <MakeDir Directories="$(SiliconStudioXenkoSdkBinDir)\arm64-v8a"/>  
    <Exec Condition="'%(XenkoNativeCFiles.Extension)' != '.cpp'" Command="&quot;$(XenkoDependenciesDir)\LLVM\clang.exe&quot; $(XenkoNativeClang) -o &quot;$(ProjectDir)\obj\%(XenkoNativeCFiles.Filename).o&quot; -c &quot;%(XenkoNativeCFiles.FullPath)&quot; -DANDROID -target aarch64-none-android" />
    <Exec Condition="'%(XenkoNativeCFiles.Extension)' == '.cpp'" Command="&quot;$(XenkoDependenciesDir)\LLVM\clang.exe&quot; $(XenkoNativeClangCPP) $(XenkoNativeClang) -o &quot;$(ProjectDir)\obj\%(XenkoNativeCFiles.Filename).o&quot; -c &quot;%(XenkoNativeCFiles.FullPath)&quot; -DANDROID -target aarch64-none-android" />
    <Exec Command="&quot;$(ANDROID_NDK_PATH)\toolchains\aarch64-linux-android-4.9\prebuilt\windows$(XenkoNativeAndroidIs64Bit)\bin\aarch64-linux-android-gcc.exe&quot; $(XenkoNativeToolingDebug) -shared -o &quot;$(SiliconStudioXenkoSdkBinDir)\arm64-v8a\$(XenkoNativeOutputName).so&quot; @(XenkoNativeCFiles->'&quot;$(ProjectDir)\obj\%(Filename).o&quot;', ' ') --sysroot=&quot;$(ANDROID_NDK_PATH)\platforms\android-21\arch-arm64&quot; @(XenkoNativePathLibs2->'&quot;$(XenkoDependenciesDir)\NativePath\Android\arm64-v8a\%(Filename).a&quot;', ' ') &quot;$(XenkoDependenciesDir)\NativePath\Android\arm64-v8a\libNativePath.a&quot; $(XenkoNativeAndroidGCC)" />

    <MakeDir Directories="$(SiliconStudioXenkoSdkBinDir)\x86"/>  
    <Exec Condition="'%(XenkoNativeCFiles.Extension)' != '.cpp'" Command="&quot;$(XenkoDependenciesDir)\LLVM\clang.exe&quot; $(XenkoNativeClang) -o &quot;$(ProjectDir)\obj\%(XenkoNativeCFiles.Filename).o&quot; -c &quot;%(XenkoNativeCFiles.FullPath)&quot; -DANDROID -target i386-none-android" />
    <Exec Condition="'%(XenkoNativeCFiles.Extension)' == '.cpp'" Command="&quot;$(XenkoDependenciesDir)\LLVM\clang.exe&quot; $(XenkoNativeClangCPP) $(XenkoNativeClang) -o &quot;$(ProjectDir)\obj\%(XenkoNativeCFiles.Filename).o&quot; -c &quot;%(XenkoNativeCFiles.FullPath)&quot; -DANDROID -target i386-none-android" />
    <Exec Command="&quot;$(ANDROID_NDK_PATH)\toolchains\x86-4.9\prebuilt\windows$(XenkoNativeAndroidIs64Bit)\bin\i686-linux-android-gcc.exe&quot; $(XenkoNativeToolingDebug) -shared -o &quot;$(SiliconStudioXenkoSdkBinDir)\x86\$(XenkoNativeOutputName).so&quot; @(XenkoNativeCFiles->'&quot;$(ProjectDir)\obj\%(Filename).o&quot;', ' ') --sysroot=&quot;$(ANDROID_NDK_PATH)\platforms\android-9\arch-x86&quot; @(XenkoNativePathLibs2->'&quot;$(XenkoDependenciesDir)\NativePath\Android\x86\%(Filename).a&quot;', ' ') &quot;$(XenkoDependenciesDir)\NativePath\Android\x86\libNativePath.a&quot; $(XenkoNativeAndroidGCC)" />
    
    <MakeDir Directories="$(SiliconStudioXenkoSdkBinDir)\x86_64"/>  
    <Exec Condition="'%(XenkoNativeCFiles.Extension)' != '.cpp'" Command="&quot;$(XenkoDependenciesDir)\LLVM\clang.exe&quot; $(XenkoNativeClang) -o &quot;$(ProjectDir)\obj\%(XenkoNativeCFiles.Filename).o&quot; -c &quot;%(XenkoNativeCFiles.FullPath)&quot; -DANDROID -target x86_64-none-android" />
    <Exec Condition="'%(XenkoNativeCFiles.Extension)' == '.cpp'" Command="&quot;$(XenkoDependenciesDir)\LLVM\clang.exe&quot; $(XenkoNativeClangCPP) $(XenkoNativeClang) -o &quot;$(ProjectDir)\obj\%(XenkoNativeCFiles.Filename).o&quot; -c &quot;%(XenkoNativeCFiles.FullPath)&quot; -DANDROID -target x86_64-none-android" />
    <Exec Command="&quot;$(ANDROID_NDK_PATH)\toolchains\x86_64-4.9\prebuilt\windows$(XenkoNativeAndroidIs64Bit)\bin\x86_64-linux-android-gcc.exe&quot; $(XenkoNativeToolingDebug) -shared -o &quot;$(SiliconStudioXenkoSdkBinDir)\x86_64\$(XenkoNativeOutputName).so&quot; @(XenkoNativeCFiles->'&quot;$(ProjectDir)\obj\%(Filename).o&quot;', ' ') --sysroot=&quot;$(ANDROID_NDK_PATH)\platforms\android-21\arch-x86_64&quot; @(XenkoNativePathLibs2->'&quot;$(XenkoDependenciesDir)\NativePath\Android\x86_64\%(Filename).a&quot;', ' ') &quot;$(XenkoDependenciesDir)\NativePath\Android\x86_64\libNativePath.a&quot; $(XenkoNativeAndroidGCC)" />
  </Target>

  <Target Name="CompileNativeClang_Android_Clean" Condition="'$(SiliconStudioPlatform)' == 'Android'" BeforeTargets="Clean">
    <Delete Files="$(SiliconStudioXenkoSdkBinDir)\x86_64\$(XenkoNativeOutputName).so" />
    <Delete Files="$(SiliconStudioXenkoSdkBinDir)\x86\\$(XenkoNativeOutputName).so" />
    <Delete Files="$(SiliconStudioXenkoSdkBinDir)\arm64-v8a\$(XenkoNativeOutputName).so" />
    <Delete Files="$(SiliconStudioXenkoSdkBinDir)\armeabi\$(XenkoNativeOutputName).so" />
    <Delete Files="$(SiliconStudioXenkoSdkBinDir)\armeabi-v7a\$(XenkoNativeOutputName).so" />
  </Target>
  
  <Target Name="CompileNativeClang_Linux" Inputs="@(XenkoNativeCFiles);@(XenkoNativeHFiles)" Outputs="$(SiliconStudioXenkoSdkBinDir)\x86\$(XenkoNativeOutputName).so;$(SiliconStudioXenkoSdkBinDir)\x64\$(XenkoNativeOutputName).so" Condition="'$(SiliconStudioPlatform)' == 'Linux'" BeforeTargets="Build">
    <MakeDir Directories="$(SiliconStudioXenkoSdkBinDir)\x86;$(SiliconStudioXenkoSdkBinDir)\x64;"/>
    <Exec Condition="'%(XenkoNativeCFiles.Extension)' != '.cpp'" Command="&quot;$(XenkoDependenciesDir)\LLVM\clang.exe&quot; $(XenkoNativeClang) -o &quot;$(ProjectDir)\obj\%(XenkoNativeCFiles.Filename).o&quot; -c &quot;%(XenkoNativeCFiles.FullPath)&quot; -DLINUX -fPIC -target x86_64-linux-gnu" />
    <Exec Condition="'%(XenkoNativeCFiles.Extension)' == '.cpp'" Command="&quot;$(XenkoDependenciesDir)\LLVM\clang.exe&quot; $(XenkoNativeClangCPP) $(XenkoNativeClang) -o &quot;$(ProjectDir)\obj\%(XenkoNativeCFiles.Filename).o&quot; -c &quot;%(XenkoNativeCFiles.FullPath)&quot; -DLINUX -fPIC -target x86_64-linux-gnu" />
    <Exec Command="&quot;$(XenkoDependenciesDir)\LLVM\lld.exe&quot; -flavor gnu --eh-frame-hdr -m elf_x86_64 -shared -o &quot;$(SiliconStudioXenkoSdkBinDir)\x64\$(XenkoNativeOutputName).so&quot; @(XenkoNativeCFiles->'&quot;$(ProjectDir)\obj\%(Filename).o&quot;', ' ') @(XenkoNativePathLibs2->'&quot;$(XenkoDependenciesDir)\NativePath\Linux\x86_64\%(Filename).a&quot;', ' ') &quot;$(XenkoDependenciesDir)\NativePath\Linux\x86_64\libNativePath.a&quot;" />

    <Exec Condition="'%(XenkoNativeCFiles.Extension)' != '.cpp'" Command="&quot;$(XenkoDependenciesDir)\LLVM\clang.exe&quot; $(XenkoNativeClang) -o &quot;$(ProjectDir)\obj\%(XenkoNativeCFiles.Filename).o&quot; -c &quot;%(XenkoNativeCFiles.FullPath)&quot; -DLINUX -fPIC -target i386-linux-gnu" />
    <Exec Condition="'%(XenkoNativeCFiles.Extension)' == '.cpp'" Command="&quot;$(XenkoDependenciesDir)\LLVM\clang.exe&quot; $(XenkoNativeClangCPP) $(XenkoNativeClang) -o &quot;$(ProjectDir)\obj\%(XenkoNativeCFiles.Filename).o&quot; -c &quot;%(XenkoNativeCFiles.FullPath)&quot; -fPIC -DLINUX -target i386-linux-gnu" />
    <Exec Command="&quot;$(XenkoDependenciesDir)\LLVM\lld.exe&quot; -flavor gnu --eh-frame-hdr -m elf_i386 -shared -o &quot;$(SiliconStudioXenkoSdkBinDir)\x86\$(XenkoNativeOutputName).so&quot; @(XenkoNativeCFiles->'&quot;$(ProjectDir)\obj\%(Filename).o&quot;', ' ') @(XenkoNativePathLibs2->'&quot;$(XenkoDependenciesDir)\NativePath\Linux\x86\%(Filename).a&quot;', ' ') &quot;$(XenkoDependenciesDir)\NativePath\Linux\x86\libNativePath.a&quot;" />
  </Target>

  <Target Name="CompileNativeClang_Linux_Clean" Condition="'$(SiliconStudioPlatform)' == 'Linux'" BeforeTargets="Clean;CompileNativeClang_Android">
    <Delete Files="$(SiliconStudioXenkoSdkBinDir)\x86\$(XenkoNativeOutputName).so;$(SiliconStudioXenkoSdkBinDir)\x64\$(XenkoNativeOutputName).so" />
  </Target>

  <ItemGroup>
    <ObjFiles Include="$(ProjectDir)\obj\*.obj" />
    <OFiles Include="$(ProjectDir)\obj\*.o" />
    <OFiles Include="$(ProjectDir)\obj\*.a" />
  </ItemGroup>

  <Target Name="CompileNativeClang_Clean" Condition="'$(SiliconStudioPackageBuild)' != 'true'" BeforeTargets="Clean;CompileNativeClang_Windows;CompileNativeClang_Windows10;CompileNativeClang_WindowsStore;CompileNativeClang_WindowsPhone;CompileNativeClang_iOS;CompileNativeClang_Android;CompileNativeClang_Linux">
    <Delete Files="@(ObjFiles)" />
    <Delete Files="@(OFiles)" />
  </Target>
</Project>
